name: Publish package to Maven Central and Gradle Plugin Portal
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        default: ''
jobs:
  publish:
    runs-on: ${{ matrix.operating-system }}
    permissions:
      contents: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'
      - name: Read and update version
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            BASE_VERSION="${{ github.event.inputs.version }}"
          else
            BASE_VERSION=$(grep "^version=" gradle.properties | cut -d'=' -f2)
          fi
          echo "VERSION=${BASE_VERSION}" >> $GITHUB_ENV
          echo "Version: $BASE_VERSION"
      - name: Create jreleaser work directory
        run: mkdir -p ./build/jreleaser
      - name: Create stage deploy (macOS)
        if: runner.os == 'macOS'
        run: ./gradlew :jvmti:publish -Pversion=$VERSION
      - name: Create stage deploy (Linux)
        if: runner.os == 'Linux'
        run: ./gradlew publish -Pversion=$VERSION
      - name: Publish to Maven Central
        continue-on-error: true
        run: ./gradlew jreleaserFullRelease -Pversion=$VERSION
        env:
          JRELEASER_MAVENCENTRAL_USERNAME: ${{secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{secrets.JRELEASER_MAVENCENTRAL_PASSWORD}}
          JRELEASER_GPG_PASSPHRASE: ${{secrets.JRELEASER_GPG_PASSPHRASE}}
          JRELEASER_GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          JRELEASER_GPG_PUBLIC_KEY: ${{secrets.JRELEASER_GPG_PUBLIC_KEY}}
          JRELEASER_GPG_SECRET_KEY: ${{secrets.JRELEASER_GPG_SECRET_KEY}}
      - name: Publish to Gradle Plugins Portal
        if: runner.os == 'Linux'
        run: ./gradlew publishPlugins -Pversion=$VERSION
        env:
          GRADLE_PUBLISH_KEY: ${{secrets.GRADLE_PUBLISH_KEY}}
          GRADLE_PUBLISH_SECRET: ${{secrets.GRADLE_PUBLISH_SECRET}}
      - uses: actions/create-release@v1
        if: runner.os == 'Linux'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          body: |
            This release includes the following:
            - Version: `${{ env.VERSION }}`
            - Published packages are available in Maven central.
          draft: false
          prerelease: true
      - name: Update README version
        if: runner.os == 'Linux'
        run: |
          LATEST_VERSION=${{ env.VERSION }}
          sed -i "s/id(\"org.pastalab.fray.gradle\") version \".*\"/id(\"org.pastalab.fray.gradle\") version \"$LATEST_VERSION\"/" README.md
          sed -i "s|<version>.*</version>|<version>$LATEST_VERSION</version>|" README.md
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        if: runner.os == 'Linux'
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # You need to create your own token with pull request rights
          commit-message: update readme
          title: Update readme
          body: Update readme to reflect release changes
          branch: update-readme
          base: main

