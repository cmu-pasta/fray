#!bash

JAVA_PATH="#JAVA_PATH#"
JVMTI_PATH="#JVM_TI_PATH#"
AGENT_PATH="#AGENT_PATH#"
CORE_PATH="#CORE_PATH#"
REPORT_PATH="/tmp/report" # Default report path

# Function to resolve classpaths with wildcard support
resolve_classpaths() {
  local IFS=":"
  local resolved_paths=""

  for path in $1; do
    if [[ "$path" == *"*"* ]]; then
      dir_path=$(dirname "$path")
      pattern=$(basename "$path" | sed 's/\*/.*/')

      if [[ -d "$dir_path" ]]; then
        for entry in "$dir_path"/*; do
          if [[ "$(basename "$entry")" =~ $pattern ]]; then
            if [[ -z "$resolved_paths" ]]; then
              resolved_paths="$entry"
            else
              resolved_paths="$resolved_paths:$entry"
            fi
          fi
        done
      fi
    else
      new_path=$(realpath "$path")
      if [[ "$path" == */ ]]; then
        new_path="${new_path}/"
      fi

      if [[ -z "$resolved_paths" ]]; then
        resolved_paths="$new_path"
      else
        resolved_paths="$resolved_paths:$new_path"
      fi
    fi
  done

  echo "$resolved_paths"
}

# Process command line arguments
CLASS_PATH=""
SYSTEM_PROPS=""
REPLAY=""
CLASS=""
ARGS=()

while [[ $# -gt 0 ]]; do
  case $1 in
    -cp|--class-path)
      CLASS_PATH="$2"
      shift 2
      ;;
    --system-props)
      SYSTEM_PROPS="$2"
      shift 2
      ;;
    --replay)
      REPLAY="$2"
      shift 2
      ;;
    -*)
      echo "Unknown option: $1"
      exit 1
      ;;
    *)
      if [[ -z "$CLASS" ]]; then
        CLASS="$1"
        shift
      else
        ARGS+=("$1")
        shift
      fi
      ;;
  esac
done

# Set up class path
if [[ -n "$CLASS_PATH" ]]; then
  FULL_CLASS_PATH="${CORE_PATH}:${CLASS_PATH}"
else
  FULL_CLASS_PATH="${CORE_PATH}"
fi

RESOLVED_CLASS_PATH=$(resolve_classpaths "$FULL_CLASS_PATH")

# Build command
COMMAND=("$JAVA_PATH")

# Add system properties
if [[ -n "$SYSTEM_PROPS" ]]; then
  read -ra PROPS <<< "$SYSTEM_PROPS"
  COMMAND+=("${PROPS[@]}")
fi

# Add remaining JVM arguments
COMMAND+=("-ea")
COMMAND+=("-cp" "$RESOLVED_CLASS_PATH")
COMMAND+=("-agentpath:$JVMTI_PATH")
COMMAND+=("-javaagent:$AGENT_PATH")
COMMAND+=("org.pastalab.fray.core.MainKt")
COMMAND+=("--run-config" "cli")
COMMAND+=("--clazz" "$CLASS")
COMMAND+=("--method" "main")

# Add replay if specified
if [[ -n "$REPLAY" ]]; then
  COMMAND+=("--scheduler" "replay-from-recordings" "--path-to-recordings" "$REPLAY")
fi

# Add args if any
if [[ ${#ARGS[@]} -gt 0 ]]; then
  ARGS_JOINED=$(IFS=:; echo "${ARGS[*]}")
  COMMAND+=("--args" "$ARGS_JOINED")
fi

# Remove fray log if it exists
FRAY_LOG_PATH="${REPORT_PATH}/fray.log"
if [[ -f "$FRAY_LOG_PATH" ]]; then
  rm "$FRAY_LOG_PATH"
fi

# Execute command
"${COMMAND[@]}"